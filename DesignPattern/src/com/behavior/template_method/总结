模板方法模式

定义
	定义一个操作中的算法的框架，而将一些步骤延迟到子类中，使得子类可以不改变一个算法的结构即可冲定义该算法的某些特定步骤。
	
	
两个角色
	1、AbstractClass：抽象模板，定义了模板结构，让子类去具体实现
	
	2、ConcreteClass：具体模板，具体实现抽象类的抽象方法
	
	
使用场景
	1、对一些复杂的算法进行分割，将其算法中固定不变的部分设计为模板方法和父类具体方法，而一些可以改变的细节由其子类来实现。
	
	2、各子类中公共的行为应被提取出来并集中到一个公共父类中以避免代码重复。
	
	3、需要通过子类来决定父类算法中某个步骤是否执行，实现子类对父类的反向控制。


优缺点
优点
	1.代码复用，相同部分代码放在抽象的父类中
	
	2.良好的可扩展性
	
	3.反向控制，通过父类调用子类的操作，通过子类的扩展添加新的行为

缺点
	需要为每一个基本方法的不同实现提供一个子类，如果父类中可变的基本方法太多，将会导致类的个数增加，系统更加庞大，设计也更加抽象。	