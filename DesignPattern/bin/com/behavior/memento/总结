备忘录模式

定义：
	在不破坏封装性的前提下，捕获一个对象的内部状态，并在该对象之外的保存这个状态。
	
	
需要把保存一个对象在某个时刻的状态或部分状态，在未来某个时段需要时，将其还原到原来记录状态的模式，就是 备忘录模式。	

	
三个角色：
	1、Originator：发起人，创建一个备忘录，可以记录，恢复自身的内部状态，还可根据需求决定存储那些内部状态。
	
	2、Memento：备忘录，存储发起人角色的内部状态，并防止外部对象访问备忘录。
	
	3、Caretaker：管理者，存储备忘录，不能对备忘录内容进行访问，只能将其传递给其他对象。
	
	
使用场景
	保存一个对象在某一个时刻的全部状态或部分状态，这样以后需要时它能够恢复到先前的状态，实现撤销操作。
	防止外界对象破坏一个对象历史状态的封装性。如果有需要提供回滚操作的需求，使用备忘录模式非常适合。

优缺点
优点
	1.更好的封装性，不把发起人对象的内部实现细节暴露给外部；
	
	2.简化了发起人，把备忘录对象保存到发起人对象之外，让客户来管理请求的状态；
	
	3.窄接口和宽接口，债基口保证了只有发起者才能访问备忘录对象的状态；

缺点
	资源消耗过大，如果需要保存的原发器类的成员变量太多，就不可避免需要占用大量的存储空间，
	每保存一次对象的状态都需要消耗一定的系统资源。