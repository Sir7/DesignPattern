代理模式		引用代理对象的方式来访问目标对象，单向

简单点说就是：引用代理对象对象的方式来访问目标对象


举个例子帮助理解下代理模式：小猪的老爸是卖鞋的 
以前：以前拿货都要自己叫个小货车，然后去广州，接着采购，接着又把车开回来。 
现在：现在有代理商这种东西，老爸只需要把采购的型号告知代理商，然后由他来完成采购，最后电话给我把电话去提货就好，方便太多。

这里的   代理商  就是  代理对象  ，代替  我爸（真实对象）  去    拿货（间接访问操作）


代理模式的套路就是：
先把需要代理的操作抽取成一个代理操作接口，然后真实类和代理类都去实现这个接口，
代理类中创建真实类实例，并在代理操作方法中进行调用，还可以做一些其他的附加操作。


定义
	为其他对象提供一种代理以控制对这个对象的访问。
	

三个角色
	1、Subject：抽象对象，声明真实角色与代理角色的公共接口。(案例中的FetchGoods接口类)
	
	2、RealSubject：真实对象，代理角色所代表的真实对象，最终引用对象。(案例中的Custom类)
	
	3、Proxy：代理对象，包含对真实对象的引用从而操作真实对象，相当于对真实对象进行封装。(案例中的Agent类)
	

使用场景
	1、远程代理：为一个对象在不同的地址空间提供局部代表，可以隐藏对象存在于不同地址空间的事实，把占资源和操作移到更好的硬件上。
	
	2、虚拟代理：用消耗资源较小的对象替代多的对象。
	
	3、保护代理：控制目标对象访问，给不同用户提供不同访问权限智能引用代理：访问对象时附加额外操作
	

优缺点
优点：
	1、协调调用者与被调用者，有助于系统解耦。
	
	2、客户端可以针对抽象主题角色进行编程，增加和更换代理类无须修改源代码

缺点：
	1、由于在客户端和真实主题之间增加了代理对象，因此有些类型的代理模式可能会造成请求的处理速度变慢，例如保护代理。
	
	2、实现代理模式需要额外的工作，而且有些代理模式的实现过程较为复杂，例如远程代理。